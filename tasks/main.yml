---

- name: assure {{iso_download_path}} exists
  file:
    path: "{{iso_download_path }}"
    state: directory
    mode: 0755

# tasks file for ansible-role-virtualbox-guest
- name: Check if (the requested version of) vboxguestadditions is installed
  shell: modinfo vboxguest 2>/dev/null|awk '/^version/{print $2}'
  register: vbox_guest_version
  changed_when: vbox_guest_version.stdout != "{{ virtualbox_version }}"
  ignore_errors: yes

- block:
  - name: Check if the ISO file is present on guest
    stat: path="{{virtualbox_iso_path}}"
    register: file_path
    ignore_errors: yes
  - name: Download iso, if not present on guest
    get_url:
      url: http://download.virtualbox.org/virtualbox/{{ virtualbox_version}}/VBoxGuestAdditions_{{virtualbox_version}}.iso
      dest: "{{virtualbox_iso_path}}"
      checksum: "{{iso_checksum}}"
  - name: Loopback mount iso
    mount:
      name: "{{iso_mount_path}}"
      src: "{{virtualbox_iso_path}}"
      opts: "ro,loop"
      fstype: iso9660
      state: mounted

  - name: Install necessary packages for compiling
    apt:
      name: "{{ item }}"
      update_cache: yes
      cache_valid_time: 86400
      install-recommends: no
      state: present
    with_items:
    - bzip2
    - dkms
    - gcc
    - make
    - "linux-headers-{{ ansible_kernel }}"

  - name: Register currently installed virtualbox packages
    shell: dpkg --list | grep virtualbox | awk '{ print $2}'
    register: installed_packages

  - name: remove installed packages
    apt:
      name: "{{item}}"
      state: absent
    with_items: "{{installed_packages.stdout_lines}}"

  - name: Try uninstall
    shell: "/bin/bash {{iso_mount_path}}/VBoxLinuxAdditions.run uninstall --force"
    ignore_errors: yes

  - name: Build and install VBoxGuestAdditions from file (without x11)
    shell: "/bin/bash {{iso_mount_path}}/VBoxLinuxAdditions.run --nox11"
    when: (virtualbox_x11 is undefined) or (not virtualbox_x11)
    ignore_errors: yes

  - name: Build and install VBoxGuestAdditions from file (with x11)
    shell: "/bin/bash {{iso_mount_path}}/VBoxLinuxAdditions.run"
    when: (virtualbox_x11 is defined) and virtualbox_x11
    ignore_errors: yes

  - name: Unmount iso
    mount:
      name: "{{iso_mount_path}}"
      src: "{{virtualbox_iso_path}}"
      opts: "ro,loop"
      fstype: iso9660
      state: absent

  - name: Uninstall necessary packages for compiling
    apt:
      name: "{{ item }}"
      state: absent
    with_items:
      - bzip2
      - dkms
      - gcc
      - make
      - "linux-headers-{{ ansible_kernel }}"
    when: virtualbox_pkg_remove is defined and virtualbox_pkg_remove

  - name: Remove build logfiles, artefacts and ISO files
    file:
      name: "{{ item}}"
      follow: yes
      state: absent
    with_items:
      - "{{ iso_download_path }}"
      - "/opt/VBoxGuestAdditions-{{ virtualbox_version }}/src"
      - /var/lib/dkms/vboxguest
      - "/usr/src/vboxguest-{{ virtualbox_version }}"
      - /var/log/vboxadd-install.log
      - /var/log/vboxadd-install-x11.log
      - /var/log/VBoxGuestAdditions.log

  - name: Remove iso fstab entry
    lineinfile: >
      dest=/etc/fstab
      regexp='^{{ iso_download_path }}'
      line='{{ iso_download_path }}	{{ iso_mount_path }}	iso9660	ro,loop	0	0'
      state=absent

  when: (vbox_guest_version.stdout != "{{ virtualbox_version }}")
